server:
  port: 2021
spring:
  redis:
    host: 127.0.0.1
    port: 6379
  application:
    name: gateway-service
  cloud:
    gateway:
#      globalcors:
#        cors-configurations:
#          '[/**]':
#            allowedOrigins: "*"
#            exposeHeaders:
#              - contentType
#            allowedHeaders:
#              - contentType
#            allowCredentials: true
#            allowedMethods:
#              - GET
#              - POST
#              - OPTIONS
#              - PUT
#              - DELETE
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true
      routes:
        - id: client
          uri: lb://client-service
          predicates:
            - Path=/clientTest
          filters:
            - name: Retry
              args:
                retries: 3
#                series: CLIENT_ERROR
                statuses:
                  - CONTINUE
                  - SWITCHING_PROTOCOLS
                methods:
                  - POST
                  - GET
                exceptions:
                  - java.io.IOException
                  - org.springframework.cloud.gateway.support.TimeoutException
#          filters:
#            - name: RequestRateLimiter
#              args:
##                每秒执行的请求数量，令牌桶的填充速率
#                redis-rate-limiter.replenishRate: 1
##                每秒最大请求数量，令牌桶可以保存的令牌数
#                redis-rate-limiter.burstCapacity: 60
##                每个请求消耗多少个令牌，默认是1
#                redis-rate-limiter.requestedTokens: 60
#                key-resolver: "#{@ipKeyResolver}"
      #        过滤器
      #        - id: add_request_head
      #          uri: http://localhost:4567
      #          predicates:
      #            - Query=name, addHead
      #          filters:
      #            - AddRequestHeader=X-Request-Foo, Bar
      #        - id: remove_request_head
      #          uri: http://localhost:4567
      #          predicates:
      #            - Query=name, removeHead
      #          filters:
      #            - RemoveRequestHeader=content-length
      #        - id: status
      #          uri: http://localhost:4567
      #          predicates:
      #            - Query=name, status
      #          filters:
      #            - SetStatus=401
      #        - id: redirectTo
      #          uri: https://www.163.com/
      #          predicates:
      #            - Query=name, redirect
      #          filters:
      #            - RedirectTo=302, https://www.baidu.com/
      #        - id: customer
      #          uri: http://localhost:4567
      #          predicates:
      #            - Query=name, customer
      #          filters:
      #            - name: Customer
      #              args:
      #                name: guzx
      #        - id: customer2
      #          uri: http://localhost:4567
      #          predicates:
      #            - Query=name, customer2
      #          filters:
      #            - name: Customer2
      #              args:
      #                name: name
      #                value: lianghong
      #       断言
      #        - id: path_route
      #          uri: http://cxytiandi.com
      #          predicates:
      #            - Path=/course
      #            - Path=/blog/user/**
      #        - id: eureka_route
      #          uri: lb://client-service
      #          predicates:
      #            - Path=/client-service/**
      #        - id: query_route
      #          uri: http://cxytiandi.com
      #          predicates:
      #            - Query=foo,ba.
      #        - id: method_route
      #          uri: http://baidu.com
      #          predicates:
      #            - Method=GET
      #        - id: head_route
      #          uri: http://taobao.com
      #          predicates:
      #            - Header=X-Request-Id,\d+
      #        - id: my_route
      #          uri: http://www.163.com
      #          predicates:
      #            - name: Customer
      #              args:
      #                name: yinjihuan
eureka:
  instance:
    prefer-ip-address: true
    instance-id: ${spring.application.name}:${spring.cloud.client.ip-address}:${server.port}
  client:
    service-url:
      defaultZone: http://guzx:970712@${spring.cloud.client.ip-address}:8761/eureka